/*
 * Put the following into demo-react/platforms/android/settings.gradle:

include ':app', ':unimodules-core'//, ':runtime', ':runtime-binding-generator'
project(':unimodules-core').projectDir = new File(rootProject.projectDir, '../../node_modules/@unimodules/core/android')
*/

buildscript {
  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet("kotlinVersion", "1.3.50")}")
  }
}

// apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'kotlin-android'

group = 'org.unimodules'
version = '5.6.0'


// Simple helper that allows the root project to override versions declared by this library.
def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

//Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

//Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

//Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: mavenLocal().url)
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 29)

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 29)
    versionCode 20
    versionName "5.6.0"
  }
  lintOptions {
    abortOnError false
  }
}

apply plugin: 'maven'

/**
 * A copy-paste of the contents of:
 *   apply from: project(":unimodules-core").file("../unimodules-core.gradle")
 * ... But with the guard against non React Native projects removed.
 */
class UnimodulesPlugin implements Plugin<Project> {
    void apply(Project project) {
        // Exclude '*/flutter/*' files if not compiling for Flutter
        if (!(new File(project.rootProject.projectDir.parentFile, 'pubspec.yaml').exists())) {
            project.android.sourceSets {
                main {
                    java {
                        exclude '**/flutter/**'
                    }
                }
            }
        }

        project.configurations.configureEach {
            if (it.getName().startsWith('test') && project.file('./src/test').exists()) {
                project.dependencies.add(it.getName(), project.project(':unimodules-test-core'))
            }
        }

        project.ext.unimodule = {
            String dep, Closure closure = null ->
                Object dependency = null;

                dependency = project.project(":$dep")
                // if (new File(project.rootProject.projectDir.parentFile, 'package.json').exists()) {
                //     // Parent directory of the android project has package.json -- probably React Native
                //     dependency = project.project(":$dep")
                // } else {
                //     // There's no package.json and no pubspec.yaml
                //     throw new GradleException(
                //         "'unimodules-core.gradle' used in a project that seems not to be React Native project."
                //     )
                // }

                String configurationName = project.configurations.findByName("implementation") ? "implementation" : "compile"

                project.dependencies.add(configurationName, dependency, closure)
        }
    }
}

apply plugin: UnimodulesPlugin

dependencies {
  unimodule 'unimodules-core'
  /* Project with path ':unimodules-font-interface' could not be found in project ':app'. */
//   unimodule 'unimodules-font-interface'
//   unimodule 'unimodules-permissions-interface'
//   unimodule 'unimodules-image-loader-interface'
//   unimodule 'unimodules-app-loader'

//   implementation 'com.facebook.react:react-native:+'

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.3.50')}"
}